name: Build

on:
  push:
    tags: [ "v*.*.*", "v*.*.*.*" ]
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"
  workflow_dispatch:
  release:
    types: [created]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux-x64, win-x64]
    env:
      ASSEMBLY_INFO_PATH: Directory.Build.props
    outputs:
      APP_VERSION: ${{ env.APP_VERSION }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 8.0.x

      - name: Set APP_VERSION
        run: |
          VERSION=$(grep -oP '<Version>\K[0-9]+(?:\.[0-9]+){1,3}(?=</Version>)' "${{ env.ASSEMBLY_INFO_PATH }}" | head -1)
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version set to: $VERSION"
          
      - name: Restore
        run: dotnet restore
        
      - name: Build
        run: dotnet build
        
      - name: Publish Setup
        run: dotnet publish ./ExcelShSy.Setup/ExcelShSy.Setup.csproj -c Release -r ${{ matrix.os }} --self-contained true /p:PublishSingleFile=true

      - name: Publish UI
        run: dotnet publish ./ExcelShSy.Ui/ExcelShSy.Ui.csproj -c Release -r ${{ matrix.os }} --self-contained true /p:PublishSingleFile=true -o ./publish/${{ matrix.os }}
        
      - name: Archive output
        run: |
          cd publish/${{ matrix.os }}
          if [[ "${{ matrix.os }}" == "win-x64" ]]; then
            zip -r ../../ExShSy-${{ matrix.os }}.zip .
          else
            tar -czf ../../ExShSy-${{ matrix.os }}.tar.gz .
          fi
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ExShSy-${{ env.APP_VERSION }}-${{ matrix.os }}
          path: ExShSy-${{ matrix.os }}.*

#-------------------------------------------------------------------------------------|

  release:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'
    
    permissions:
      contents: write
      
    env:
      APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
      
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
  
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.APP_VERSION }}
        name: Release v${{ env.APP_VERSION }}
        files: |
          ./artifacts/ExShSy-${{ env.APP_VERSION }}-win-x64/ExShSy-win-x64.zip
          ./artifacts/ExShSy-${{ env.APP_VERSION }}-linux-x64/ExShSy-linux-x64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
